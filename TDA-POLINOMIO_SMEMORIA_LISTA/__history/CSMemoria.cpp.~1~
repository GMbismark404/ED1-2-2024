//---------------------------------------------------------------------------
#pragma hdrstop
#include "CSMemoria.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

TCSMemoria::TCSMemoria()
{
	mem = new NodoM[MAX];
	for (int i = 0; i < MAX - 1; i++) {
		mem[i].link = i + 1;
		mem[i].id= " ";
	}
	mem[MAX - 1].link = NULO;
	mem[MAX - 1].id= " ";
	this->libre = 0;
}

int TCSMemoria::new_espacio(AnsiString cad) { // añade los ids y devuelve una direccion
	int cant = numero_ids(cad);         // cad = "ci,fono,edad" -> 3
	int dir = libre;
	int d = libre;
	for (int i = 0; i < cant - 1; i++) {
		mem[d].id = obtener_id(cad,i);
		d = mem[d].link;
	}

	libre = mem[d].link;
	mem[d].link = -1;
	mem[d].id = obtener_id(cad, cant - 1);
return dir;
}

void TCSMemoria::delete_espacio(direccion dir) {
	direccion x = dir;
	while (mem[x].link != NULO) {
		x = mem[x].link;
	}
	mem[x].link = libre;
	libre = dir;
}